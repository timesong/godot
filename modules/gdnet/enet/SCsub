# SCsub
Import('env')

if (env['platform'] == 'windows'):
	if (env['CC'] == 'cl'):
		env.Append(LINKFLAGS=["ws2_32.lib"])
	else: # gcc mostly
		env.Append(LIBS=['ws2_32'])

local_env = env.Clone()

if env['platform'] in ('x11', 'server', 'osx'):
	local_env.Append(CPPDEFINES = '-DHAS_FCNTL=1')
	local_env.Append(CPPDEFINES = '-DHAS_POLL=1')
	local_env.Append(CPPDEFINES = '-DHAS_GETNAMEINFO=1')
	local_env.Append(CPPDEFINES = '-DHAS_GETADDRINFO=1')
	local_env.Append(CPPDEFINES = '-DHAS_GETHOSTBYNAME_R=1')
	local_env.Append(CPPDEFINES = '-DHAS_GETHOSTBYADDR_R=1')
	local_env.Append(CPPDEFINES = '-DHAS_INET_PTON=1')
	local_env.Append(CPPDEFINES = '-DHAS_INET_NTOP=1')
	local_env.Append(CPPDEFINES = '-DHAS_MSGHDR_FLAGS=1')
	local_env.Append(CPPDEFINES = '-DHAS_SOCKLEN_T=1')

if env['platform'] in ('android', ):
	local_env.Append(CPPDEFINES = '-DHAS_SOCKLEN_T=1')

local_env.Append(CPPPATH=['include'])

enet_sources = [
	"callbacks.c",
	"compress.c",
	"host.c",
	"list.c",
	"packet.c",
	"peer.c",
	"protocol.c",
]

if (env['platform'] == 'windows'):
	enet_sources.append("win32.c")
else:
	enet_sources.append("unix.c")

local_env.add_source_files(env.modules_sources, enet_sources)
